Lexeme: BTW -> Classification: Single Line Comment
Lexeme: HAI -> Classification: Code Delimeter
Lexeme: WAZZUP -> Classification: Declare Variables
Lexeme: BTW -> Classification: Single Line Comment
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: monde -> Classification: Variable Identifier
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: num -> Classification: Variable Identifier
Lexeme: ITZ -> Classification: Variable Assignment
Lexeme: 17 -> Classification: Literal
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: name -> Classification: Variable Identifier
Lexeme: ITZ -> Classification: Variable Assignment
Lexeme: " -> Classification: String Delimiter
Lexeme: seventeen -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: fnum -> Classification: Variable Identifier
Lexeme: ITZ -> Classification: Variable Assignment
Lexeme: 17.0 -> Classification: Literal
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: flag -> Classification: Variable Identifier
Lexeme: ITZ -> Classification: Variable Assignment
Lexeme: WIN -> Classification: Literal
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: sum -> Classification: Variable Identifier
Lexeme: ITZ -> Classification: Variable Assignment
Lexeme: SUM OF -> Classification : Arithmetic Operation
Lexeme: num -> Classification: Variable Identifier
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 13 -> Classification: Literal
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: diff -> Classification: Variable Identifier
Lexeme: ITZ -> Classification: Variable Assignment
Lexeme: DIFF OF -> Classification : Arithmetic Operation
Lexeme: sum -> Classification: Variable Identifier
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 17 -> Classification: Literal
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: prod -> Classification: Variable Identifier
Lexeme: ITZ -> Classification: Variable Assignment
Lexeme: PRODUKT OF -> Classification : Arithmetic Operation
Lexeme: 3 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 4 -> Classification: Literal
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: quo -> Classification: Variable Identifier
Lexeme: ITZ -> Classification: Variable Assignment
Lexeme: QUOSHUNT OF -> Classification : Arithmetic Operation
Lexeme: 4 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 5 -> Classification: Literal
Lexeme: BUHBYE -> Classification: Declare Variables
Lexeme: BTW -> Classification: Single Line Comment
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: " -> Classification: String Delimiter
Lexeme: declarations -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: monde -> Classification: Variable Identifier
Lexeme: BTW -> Classification: Single Line Comment
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: num -> Classification: Variable Identifier
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: name -> Classification: Variable Identifier
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: fnum -> Classification: Variable Identifier
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: flag -> Classification: Variable Identifier
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: sum -> Classification: Variable Identifier
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: diff -> Classification: Variable Identifier
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: prod -> Classification: Variable Identifier
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: quo -> Classification: Variable Identifier
Lexeme: BTW -> Classification: Single Line Comment
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: SUM OF -> Classification : Arithmetic Operation
Lexeme: PRODUKT OF -> Classification : Arithmetic Operation
Lexeme: 3 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 5 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: BIGGR OF -> Classification : Comparison Operation
Lexeme: DIFF OF -> Classification : Arithmetic Operation
Lexeme: 17 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 2 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 5 -> Classification: Literal
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: BIGGR OF -> Classification : Comparison Operation
Lexeme: PRODUKT OF -> Classification : Arithmetic Operation
Lexeme: 11 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 2 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: QUOSHUNT OF -> Classification : Arithmetic Operation
Lexeme: SUM OF -> Classification : Arithmetic Operation
Lexeme: 3 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 5 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 2 -> Classification: Literal
Lexeme: KTHXBYE -> Classification: Code Delimeter
Lexeme: HAI -> Classification: Code Delimeter
Lexeme: WAZZUP -> Classification: Declare Variables
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: choice -> Classification: Variable Identifier
Lexeme: I HAS A -> Classification : Variable Declaration
Lexeme: input -> Classification: Variable Identifier
Lexeme: BUHBYE -> Classification: Declare Variables
Lexeme: BTW -> Classification: Single Line Comment
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: " -> Classification: String Delimiter
Lexeme: 1. Compute age -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: " -> Classification: String Delimiter
Lexeme: 2. Compute tip -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: " -> Classification: String Delimiter
Lexeme: 3. Compute square area -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: " -> Classification: String Delimiter
Lexeme: 0. Exit -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: " -> Classification: String Delimiter
Lexeme: Choice:  -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: GIMMEH -> Classification: Input Keyword
Lexeme: choice -> Classification: Variable Identifier
Lexeme: BOTH SAEM -> Classification : Comparison Operation
Lexeme: choice -> Classification: Variable Identifier
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 1 -> Classification: Literal
Lexeme: O RLY? -> Classification : Conditional Statement
Lexeme: YA RLY -> Classification : Conditional Statement
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: " -> Classification: String Delimiter
Lexeme: Enter birth year:  -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: GIMMEH -> Classification: Input Keyword
Lexeme: input -> Classification: Variable Identifier
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: DIFF OF -> Classification : Arithmetic Operation
Lexeme: 2022 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: input -> Classification: Variable Identifier
Lexeme: OBTW -> Classification: Multiple Line Comment
Lexeme: TLDR -> Classification: Multiple Line Comment
Lexeme: NO WAI -> Classification : Conditional Statement
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: " -> Classification: String Delimiter
Lexeme: Invalid Input! -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: OIC -> Classification: Conditional Statement
Lexeme: DIFFRINT -> Classification: Comparison Operation
Lexeme: BIGGR OF -> Classification : Comparison Operation
Lexeme: 3 -> Classification: Literal
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: choice -> Classification: Variable Identifier
Lexeme: AN -> Classification: ASK MAAM/UNKNOWN
Lexeme: 3 -> Classification: Literal
Lexeme: O RLY? -> Classification : Conditional Statement
Lexeme: YA RLY -> Classification : Conditional Statement
Lexeme: VISIBLE -> Classification: Output Keyword
Lexeme: " -> Classification: String Delimiter
Lexeme: Invalid input is > 3. -> Classification: Literal
Lexeme: " -> Classification: String Delimiter
Lexeme: OIC -> Classification: Conditional Statement
Lexeme: KTHXBYE -> Classification: Code Delimeter
